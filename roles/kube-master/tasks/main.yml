---
- name: "create install dir {{k8s.install_dir}}"
  file: path={{k8s.install_dir}} state=directory

- name: "create k8s data directory."
  file: path={{item}} state=directory
  with_items:
    - "{{k8s.etc_dir}}"
    - "{{k8s.install_dir}}/bin"

- name: copy files to remote host {{k8s.install_dir}}
  copy: src={{k8s.bin_dir}}/{{item}} dest={{k8s.install_dir}}/bin/{{item}} mode=0755
  with_items:
  - kube-apiserver
  - kube-controller-manager
  - kube-scheduler
  - kubectl

- name: Write token.csv file
  template: src=token.csv.j2 dest={{k8s.etc_dir}}/token.csv

- name: Write kube-apiserver.service file
  template: src=kube-apiserver.service.j2 dest=/lib/systemd/system/kube-apiserver.service
  notify:
    - reload systemctl daemon
    - restart kube-apiserver

- name: Write kube-controller-manager.service file
  template: src=kube-controller-manager.service.j2 dest=/lib/systemd/system/kube-controller-manager.service
  notify:
    - reload systemctl daemon
    - restart kube-controller-manager

- name: Write kube-scheduler.service file
  template: src=kube-scheduler.service.j2 dest=/lib/systemd/system/kube-scheduler.service
  notify:
    - reload systemctl daemon
    - restart kube-scheduler

- name: set kubenetes env {{k8s.env_file}}
  tags: env
  lineinfile: dest={{k8s.env_file}} insertafter="{{item.position}}" line="{{item.value}}" state=present
  with_items:
    - {position: EOF, value: "#########K8S ENV########"}
    - {position: EOF, value: "export KUBERNETES_HOME={{k8s.install_dir}}"}
    - {position: EOF, value: "export PATH=$KUBERNETES_HOME/bin:$PATH"}
  notify:
    - enable env

